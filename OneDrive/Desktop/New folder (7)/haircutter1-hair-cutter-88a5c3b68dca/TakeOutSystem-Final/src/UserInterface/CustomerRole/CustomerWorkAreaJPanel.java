/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.CustomerRole;

import Business.Enterprise.Enterprise;
import Business.Enterprise.PharmacyEnterprice;
import Business.Network.Network;
import Business.Request.Medicine;
import Business.Request.Order;
import Business.Request.OrderDirectory;
import Business.EcoSystem;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HYY
 */
public class CustomerWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CustomerWorkArea
     */
    private EcoSystem system;
    private JPanel userProcessContainer;
    private OrderDirectory orderDirectory;
    private List<Medicine> l;
    private float sum;
    private UserAccount account;
    
    public CustomerWorkAreaJPanel(JPanel userProcessContainer, UserAccount account,EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        this.account = account;
        this.orderDirectory =system.getOrderDirectory();
        this.l = new ArrayList<>();
        
        sum = 0;
        populateNetCob();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        menuJTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        ResCob = new javax.swing.JComboBox<>();
        btnOrder = new javax.swing.JButton();
        btnViewOrder = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        NetCob = new javax.swing.JComboBox<>();
        Addbtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        CartTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        txtCost = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        btnDelete = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        menuJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name of Medicines", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(menuJTable);
        if (menuJTable.getColumnModel().getColumnCount() > 0) {
            menuJTable.getColumnModel().getColumn(0).setResizable(false);
            menuJTable.getColumnModel().getColumn(1).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 220, -1, 104));

        jLabel1.setBackground(new java.awt.Color(0, 204, 204));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Choose A Pharmacy");
        jLabel1.setOpaque(true);
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 170, 150, -1));

        ResCob.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        ResCob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResCobActionPerformed(evt);
            }
        });
        add(ResCob, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 170, 135, -1));

        btnOrder.setBackground(new java.awt.Color(0, 153, 153));
        btnOrder.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        btnOrder.setForeground(new java.awt.Color(255, 255, 255));
        btnOrder.setText("Order");
        btnOrder.setOpaque(true);
        btnOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrderActionPerformed(evt);
            }
        });
        add(btnOrder, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 380, 116, -1));

        btnViewOrder.setBackground(new java.awt.Color(0, 153, 153));
        btnViewOrder.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        btnViewOrder.setForeground(new java.awt.Color(255, 255, 255));
        btnViewOrder.setText("Order History");
        btnViewOrder.setOpaque(true);
        btnViewOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewOrderActionPerformed(evt);
            }
        });
        add(btnViewOrder, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 430, 116, -1));

        jLabel2.setBackground(new java.awt.Color(0, 204, 204));
        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Choose A Area");
        jLabel2.setOpaque(true);
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 130, 140, -1));

        NetCob.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        NetCob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NetCobActionPerformed(evt);
            }
        });
        add(NetCob, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 130, 135, -1));

        Addbtn.setBackground(new java.awt.Color(0, 153, 153));
        Addbtn.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        Addbtn.setForeground(new java.awt.Color(255, 255, 255));
        Addbtn.setText("Add to Cart");
        Addbtn.setOpaque(true);
        Addbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddbtnActionPerformed(evt);
            }
        });
        add(Addbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 290, 116, -1));

        CartTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name of Medicines", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(CartTable);
        if (CartTable.getColumnModel().getColumnCount() > 0) {
            CartTable.getColumnModel().getColumn(0).setResizable(false);
            CartTable.getColumnModel().getColumn(1).setResizable(false);
        }

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 380, -1, 104));

        jLabel3.setBackground(new java.awt.Color(0, 204, 204));
        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Total Cost:");
        jLabel3.setOpaque(true);
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 500, 90, -1));

        txtCost.setEnabled(false);
        txtCost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCostActionPerformed(evt);
            }
        });
        add(txtCost, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 500, 137, -1));

        jLabel4.setBackground(new java.awt.Color(0, 204, 204));
        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Address:");
        jLabel4.setOpaque(true);
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 500, 80, -1));
        add(txtAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 500, 103, -1));

        btnDelete.setBackground(new java.awt.Color(0, 153, 153));
        btnDelete.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setText("Delete");
        btnDelete.setOpaque(true);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 340, 116, -1));

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 204, 204));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Your Cart:");
        jLabel5.setOpaque(true);
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 380, 79, -1));

        jLabel6.setBackground(new java.awt.Color(0, 204, 204));
        jLabel6.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Customer");
        jLabel6.setOpaque(true);
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 20, 230, -1));

        jSeparator1.setForeground(new java.awt.Color(0, 153, 153));
        add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 340, 540, 10));
    }// </editor-fold>//GEN-END:initComponents
    private void populateNetCob(){
        
        NetCob.removeAllItems();
        for (Network network : system.getNetworkList()) {
            NetCob.addItem(network);
        }
    }
    private void populateResCob(Network network){
        ResCob.removeAllItems();
        for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
            if(enterprise.getEnterpriseType().getValue().equals("Pharmacy"))
            ResCob.addItem(enterprise);
        }
    }
    private void populateMenutable(Enterprise enterprise){
        DefaultTableModel model = (DefaultTableModel) menuJTable.getModel();
        model.setRowCount(0);
        for(Medicine d: enterprise.getMenu().getMedicineList()){
            Object[] row = new Object[2];
            row[0] = d;
            row[1] = d.getPrice();
            model.addRow(row);
        }
        
    }
     private void populateCartTable(){
        DefaultTableModel model = (DefaultTableModel) CartTable.getModel();
        model.setRowCount(0);
        
        for(Medicine d: l){
            Object[] row = new Object[2];
            row[0] = d;
            row[1] = d.getPrice();
            model.addRow(row);
            
            
        }
        
        txtCost.setText(String.valueOf(sum));
        
        
    }
    private void AddbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddbtnActionPerformed
        // TODO add your handling code here:
        
        int selectedRow = menuJTable.getSelectedRow();
        if (selectedRow >= 0) {
            //int selectionButton = JOptionPane.YES_NO_OPTION;
            //int selectionResult = JOptionPane.showConfirmDialog(null, "Are you sure to update??", "Warning", selectionButton);
            //if (selectionResult == JOptionPane.YES_OPTION) {
                Medicine d= (Medicine) menuJTable.getValueAt(selectedRow, 0);
                
                l.add(d);
                sum+=d.getPrice();
                populateCartTable();
                
                
        }       
         
        else {
            JOptionPane.showMessageDialog(null, "Please select a Dish!!");
        }
        
    }//GEN-LAST:event_AddbtnActionPerformed

    private void NetCobActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NetCobActionPerformed
        // TODO add your handling code here:
         Network network = (Network) NetCob.getSelectedItem();
        if (network != null){
            populateResCob(network);
        }
        
    }//GEN-LAST:event_NetCobActionPerformed

    private void ResCobActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResCobActionPerformed
        // TODO add your handling code here:
        PharmacyEnterprice enterprise = (PharmacyEnterprice) ResCob.getSelectedItem();
        if (enterprise != null){
            populateMenutable(enterprise);
        }
        
    }//GEN-LAST:event_ResCobActionPerformed

    private void txtCostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCostActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCostActionPerformed

    private void btnOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrderActionPerformed
        // TODO add your handling code here:
        Network network = (Network) NetCob.getSelectedItem();
        PharmacyEnterprice enterprise = (PharmacyEnterprice) ResCob.getSelectedItem();
        
        DefaultTableModel model = (DefaultTableModel) CartTable.getModel(); 
        String address =txtAddress.getText();
        boolean empty =true;
        if(sum==0){
            JOptionPane.showMessageDialog(null, "Your Cart is Empty!!");
            empty=false;
            return;
        }
        if(address==null||address.equals("")){
            JOptionPane.showMessageDialog(null, "Address can't be Empty!!");
            empty=false;
            return;
        }
        else{
        Order order = system.getOrderDirectory().AddOrder();
        order.setNetwork(network);
        order.setRName(enterprise.getName());
        order.setCName(account.getUsername());
        order.setMedicineTotal(l);
        order.setStatus("Ordered");
        order.setAdd(address);
        order.settPrice(sum);
        JOptionPane.showMessageDialog(null, "Your Order is Created Successfully!!");
        
        model.setRowCount(0);
        l= new ArrayList<>();
        txtAddress.setText("");
        txtCost.setText("");
        sum=0;
        }
    }//GEN-LAST:event_btnOrderActionPerformed

    private void btnViewOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewOrderActionPerformed
        // TODO add your handling code here:
        ViewOrderJPanel j =new ViewOrderJPanel(userProcessContainer,system, account);
        userProcessContainer.add("ViewOrderJPanel",j);
        CardLayout layout=(CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnViewOrderActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedrow = CartTable.getSelectedRow();

        if(selectedrow >=0)
        {
            Medicine  vs = (Medicine)CartTable.getValueAt(selectedrow,0);

            l.remove(vs);
            sum-=vs.getPrice();

            JOptionPane.showMessageDialog(null, "Dish has been deleted!!");
            
        }
        else
        JOptionPane.showMessageDialog(null,"Please select a dish!! ");
        populateCartTable();
    }//GEN-LAST:event_btnDeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Addbtn;
    private javax.swing.JTable CartTable;
    private javax.swing.JComboBox<Object> NetCob;
    private javax.swing.JComboBox<Object> ResCob;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnOrder;
    private javax.swing.JButton btnViewOrder;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable menuJTable;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtCost;
    // End of variables declaration//GEN-END:variables
}
